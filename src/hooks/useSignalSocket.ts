// 'use client' tells Next.js this hook runs in the browser
'use client'

/*******************************************************
 * useSignalSocket ‚Äì React hook for subscribing to the
 * Socket.IO server on the `/signals` namespace.
 * ----------------------------------------------------
 * ‚ñ∏ –ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ BACKEND‚Äë—É –ø–æ WebSocket (Socket.IO).
 * ‚ñ∏ –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ç–∏–ø–æ–≤ —Å–æ–±—ã—Ç–∏–π (volatility,
 *   volumeSpike, priceChange, —Ç–æ–ø‚Äë–≥–µ–π–Ω–µ—Ä—ã/–ª—É–∑–µ—Ä—ã,
 *   –∞ —Ç–∞–∫–∂–µ –∫–∞—Å—Ç–æ–º–Ω—ã–µ ¬´trigger¬ª‚Äë–∫–∞–Ω–∞–ª—ã –¥–ª—è 1h/4h/24h).
 * ‚ñ∏ –ö–∞–∂–¥–æ–µ —Å–æ–±—ã—Ç–∏–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è¬†–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ
 *   —Å–æ—Å—Ç–æ—è–Ω–∏–µ (useState) —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º 100 –∑–∞–ø–∏—Å–µ–π
 *   (0‚Äë—è –ø–æ–∑–∏—Ü–∏—è ‚Äì —Å–∞–º–∞—è –Ω–æ–≤–∞—è).
 * ‚ñ∏ –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç SignalData –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
 *   –≤ UI‚Äë–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö (Dashboards / Tables / Charts).
 ******************************************************/

import { useEffect, useRef, useState } from 'react'
import { io, Socket } from 'socket.io-client'

import {
	PriceChangeSignal,
	SignalData,
	TopGainersSignal,
	TopLosersSignal,
	VolatilitySpikeSignal,
	VolumeSpikeSignal
} from '@/types/signal.types'

/**
 * URL WebSocket‚Äë—Å–µ—Ä–≤–µ—Ä–∞ –±–µ—Ä—ë–º –∏–∑ env‚Äë–ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, —á—Ç–æ–±—ã
 * –º–æ–∂–Ω–æ –±—ã–ª–æ –ª–µ–≥–∫–æ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å dev / prod –æ–∫—Ä—É–∂–µ–Ω–∏—è.
 */
const SOCKET_URL =
	process.env.NEXT_PUBLIC_SOCKET_URL || 'http://localhost:4200'

/**
 * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π —Ç–∏–ø, —á—Ç–æ–±—ã TypeScript –Ω–µ —Ä—É–≥–∞–ª—Å—è, –∫–æ–≥–¥–∞
 * –ø—Ä–∏—Ö–æ–¥—è—Ç –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π —Ñ–æ—Ä–º—ã (payload / coins / –º–∞—Å—Å–∏–≤).
 */
type AnyObject = { [key: string]: any }

export function useSignalSocket(): SignalData {
	/*********************************
	 * refs & state
	 *********************************/
	const socketRef = useRef<Socket | null>(null)

	// ‚ñº –û—Å–Ω–æ–≤–Ω—ã–µ –º–∞—Å—Å–∏–≤—ã —Å–∏–≥–Ω–∞–ª–æ–≤ (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã 100 —ç–ª.)
	const [volatilitySpikes, setVolatilitySpikes] =
		useState<VolatilitySpikeSignal[]>([])
	const [volatilityRanges, setVolatilityRanges] =
		useState<VolatilitySpikeSignal[]>([])
	const [volumeSpikes, setVolumeSpikes] = useState<VolumeSpikeSignal[]>([])
	const [priceChanges, setPriceChanges] = useState<PriceChangeSignal[]>([])

	// ‚ñº –°–ø–∏—Å–∫–∏ —Ç–æ–ø‚Äë–º–æ–Ω–µ—Ç (—Ç–æ–ª—å–∫–æ —Å–∏–º–≤–æ–ª—ã)
	const [topGainers, setTopGainers] = useState<string[]>([])
	const [topLosers, setTopLosers] = useState<string[]>([])

	// ‚ñº ¬´–¢—Ä–∏–≥–≥–µ—Ä–Ω—ã–µ¬ª —Å–ø–∏—Å–∫–∏ –ø–æ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞–º (1h / 4h / 24h)
	const [triggerGainers1h, setTriggerGainers1h] = useState<string[]>([])
	const [triggerLosers1h, setTriggerLosers1h] = useState<string[]>([])
	const [triggerGainers4h, setTriggerGainers4h] = useState<string[]>([])
	const [triggerLosers4h, setTriggerLosers4h] = useState<string[]>([])
	const [triggerGainers24h, setTriggerGainers24h] = useState<string[]>([])
	const [triggerLosers24h, setTriggerLosers24h] = useState<string[]>([])

	/**
	 * push ‚Äì —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞
	 * –≤ ¬´—Å–∫–æ–ª—å–∑—è—â–µ–µ¬ª –æ–∫–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 100 –∑–∞–ø–∏—Å–µ–π.
	 */
	const push = <T,>(setter: React.Dispatch<React.SetStateAction<T[]>>, item: T) => {
		setter(prev => [item, ...prev.slice(0, 99)])
	}

	/*********************************
	 * socket lifecycle
	 *********************************/
	useEffect(() => {
		console.log('üöÄ Connecting to WebSocket at:', SOCKET_URL)

		// –°–æ–∑–¥–∞—ë–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ namespace `/signals`
		const socket: Socket = io(`${SOCKET_URL}/signals`, {
			transports: ['websocket', 'polling'], // fallback –Ω–∞ polling
			reconnectionAttempts: 5, // 5 –ø–æ–ø—ã—Ç–æ–∫ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
			path: '/socket.io',
		})

		socketRef.current = socket

		/* === Events for connection state === */
		socket.on('connect', () => console.log('‚úÖ WebSocket connected:', socket.id))
		socket.on('connect_error', err => console.error('‚ùå Socket error:', err.message))
		socket.on('disconnect', reason => console.log('‚ö†Ô∏è Socket disconnected:', reason))

		/* === Market‚Äësignal handlers === */

		// 1. –í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å (—Å–ø–∞–π–∫–∏)
		socket.on('signal:volatility', (s: VolatilitySpikeSignal) => {
			if (s.type === 'volatilitySpike') push(setVolatilitySpikes, s)
		})
		socket.on('volatility', (s: VolatilitySpikeSignal) => push(setVolatilitySpikes, s))
		socket.on('volatilitySpike', (s: VolatilitySpikeSignal) => push(setVolatilitySpikes, s))

		// 2. –î–∏–∞–ø–∞–∑–æ–Ω‚Äë–≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å (high‚Äëlow range)
		socket.on('signal:volatilityRange', (s: VolatilitySpikeSignal) => push(setVolatilityRanges, s))
		socket.on('volatilityRange', (s: VolatilitySpikeSignal) => push(setVolatilityRanges, s))

		// 3. –û–±—ä—ë–º–Ω—ã–µ –≤—Å–ø–ª–µ—Å–∫–∏ & –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã
		socket.on('volumeSpike', (s: VolumeSpikeSignal) => push(setVolumeSpikes, s))
		socket.on('priceChange', (s: PriceChangeSignal) => push(setPriceChanges, s))

		// 4. –¢–æ–ø‚Äë–≥–µ–π–Ω–µ—Ä—ã / –ª—É–∑–µ—Ä—ã (–ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö)
		socket.on('top:gainers', (d: TopGainersSignal | string[] | AnyObject) => {
			setTopGainers(parseSymbols(d))
		})
		socket.on('top:losers', (d: TopLosersSignal | string[] | AnyObject) => {
			setTopLosers(parseSymbols(d))
		})

		// 5. –¢—Ä–∏–≥–≥–µ—Ä‚Äë–∫–∞–Ω–∞–ª—ã –¥–ª—è 1h / 4h / 24h (—Å–∏–º–≤–æ–ª—ã‚Äë–∫–∞–Ω–¥–∏–¥–∞—Ç—ã)
		socket.on('trigger:gainers-1h', d => setTriggerGainers1h(parseSymbols(d)))
		socket.on('trigger:losers-1h', d => setTriggerLosers1h(parseSymbols(d)))

		socket.on('trigger:gainers-4h', d => setTriggerGainers4h(parseSymbols(d)))
		socket.on('trigger:losers-4h', d => setTriggerLosers4h(parseSymbols(d)))

		socket.on('trigger:gainers-24h', d => setTriggerGainers24h(parseSymbols(d)))
		socket.on('trigger:losers-24h', d => setTriggerLosers24h(parseSymbols(d)))

		/**
		 * Legacy handler: –µ—Å–ª–∏ –ø—Ä–∏–ª–µ—Ç–∞–µ—Ç ¬´—Å—ã—Ä–æ–π¬ª kline‚Äë–æ–±—ä–µ–∫—Ç
		 * –æ—Ç Binance, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ VolatilitySpikeSignal.
		 */
		socket.on('binance:kline', raw => {
			if (!raw?.k) return
			const k = raw.k
			const volatility = ((parseFloat(k.h) - parseFloat(k.l)) / parseFloat(k.o)) * 100

			const sig: VolatilitySpikeSignal = {
				type: 'volatilityRange',
				symbol: k.s,
				interval: k.i,
				open: parseFloat(k.o),
				high: parseFloat(k.h),
				low: parseFloat(k.l),
				close: parseFloat(k.c),
				volatility: +volatility.toFixed(2),
				timestamp: k.t,
			}
			push(setVolatilityRanges, sig)
		})

		// ‚Üí –ß–∏—Å—Ç–∏–º —Å–æ–∫–µ—Ç –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
		return () => {
			console.log('üõë Disconnecting socket')
			socket.disconnect()
		}
	}, [])

	/*********************************
	 * Helpers
	 *********************************/
	/**
	 * –†–∞–∑–±–∏—Ä–∞–µ–º —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã ¬´—Ç–æ–ø‚Äë–º–æ–Ω–µ—Ç¬ª –∏–∑ –±–µ–∫–µ–Ω–¥–∞:
	 * ‚Äì –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫
	 * ‚Äì –æ–±—ä–µ–∫—Ç { payload: [...] }
	 * ‚Äì –æ–±—ä–µ–∫—Ç { coins: [...] } –≥–¥–µ —ç–ª–µ–º–µ–Ω—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å string | {symbol}
	 */
	const parseSymbols = (data: any): string[] => {
		if (data && typeof data === 'object' && 'payload' in data && Array.isArray(data.payload)) {
			return data.payload
		}
		if (Array.isArray(data)) {
			return data.map(item => (typeof item === 'string' ? item : (item as AnyObject).symbol || ''))
		}
		if (data && typeof data === 'object' && Array.isArray((data as AnyObject).coins)) {
			return (data as AnyObject).coins.map((c: any) => (typeof c === 'string' ? c : c.symbol))
		}
		return []
	}

	/*********************************
	 * –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ä–µ–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–∞—Ä—É–∂—É
	 *********************************/
	return {
		volatilitySpikes,
		volatilityRanges,
		volumeSpikes,
		priceChanges,
		topGainers,
		topLosers,
		triggerGainers1h,
		triggerLosers1h,
		triggerGainers4h,
		triggerLosers4h,
		triggerGainers24h,
		triggerLosers24h,
	}
}
