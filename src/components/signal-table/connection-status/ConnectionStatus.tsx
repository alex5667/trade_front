'use client'

/**
 * ConnectionStatus Component
 * ------------------------------
 * Displays the current WebSocket connection status
 */
import { useEffect, useRef } from 'react'
import { useSelector } from 'react-redux'

import { selectConnectionStatus } from '@/store/signals/selectors/signals.selectors'

export const ConnectionStatus = () => {
	const componentId = useRef(`connection-status-${Date.now()}`)
	console.log(`üö¶ [${componentId.current}] ConnectionStatus –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω`)

	const status = useSelector(selectConnectionStatus)
	const prevStatusRef = useRef(status)

	// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
	useEffect(() => {
		if (prevStatusRef.current !== status) {
			console.log(
				`üì° [${componentId.current}] –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: ${prevStatusRef.current} -> ${status}`
			)
			prevStatusRef.current = status
		}
	}, [status])

	// –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
	useEffect(() => {
		console.log(`üîÑ [${componentId.current}] ConnectionStatus —ç—Ñ—Ñ–µ–∫—Ç –∑–∞–ø—É—â–µ–Ω`)

		return () => {
			console.log(`üõë [${componentId.current}] ConnectionStatus —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω`)
		}
	}, [])

	// Map status to display text and CSS class
	const getStatusInfo = () => {
		switch (status) {
			case 'connected':
				return { text: 'Connected', className: 'text-green-500' }
			case 'connecting':
				return { text: 'Connecting...', className: 'text-yellow-500' }
			case 'disconnected':
				return { text: 'Disconnected', className: 'text-red-500' }
			case 'error':
				return { text: 'Connection Error', className: 'text-red-500' }
			default:
				return { text: 'Unknown', className: 'text-gray-500' }
		}
	}

	const { text, className } = getStatusInfo()

	// –õ–æ–≥–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
	console.log(
		`üîÑ [${componentId.current}] –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: ${text} (${className})`
	)

	return (
		<div className='flex items-center'>
			<div
				className={`w-3 h-3 rounded-full mr-2 ${className.includes('green') ? 'bg-green-500' : className.includes('yellow') ? 'bg-yellow-500' : 'bg-red-500'}`}
			></div>
			<span className={className}>{text}</span>
		</div>
	)
}
