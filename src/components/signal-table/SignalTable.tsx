'use client'

import { useSignalSocket } from '@/hooks/useSignalSocket'

import { TimeframeCoinsTable } from './TimeframeCoinsTable'
import { VolatilityTable } from './VolatilityTable'

export function SignalTable() {
	const signalData = useSignalSocket()
	const socketConnectionStatus = signalData.connectionStatus

	// Convert socket status to UI-friendly status
	const getUIConnectionStatus = (): {
		status: 'connecting' | 'connected' | 'error' | 'reconnecting'
		message: string
	} => {
		if (socketConnectionStatus === 'connected') {
			return { status: 'connected', message: '' }
		}

		if (socketConnectionStatus.startsWith('reconnecting')) {
			return {
				status: 'reconnecting',
				message: '–ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É —Å–∏–≥–Ω–∞–ª–æ–≤...'
			}
		}

		if (
			socketConnectionStatus.startsWith('error') ||
			socketConnectionStatus === 'max_retries_reached' ||
			socketConnectionStatus === 'reconnect_failed'
		) {
			return {
				status: 'error',
				message:
					'–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É —Å–∏–≥–Ω–∞–ª–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.'
			}
		}

		return {
			status: 'connecting',
			message: '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É —Å–∏–≥–Ω–∞–ª–æ–≤...'
		}
	}

	const { status, message } = getUIConnectionStatus()

	// Is this a persistent connection error?
	const isPersistentError =
		socketConnectionStatus === 'max_retries_reached' ||
		socketConnectionStatus === 'reconnect_failed' ||
		socketConnectionStatus.includes('websocket error')

	// Check if any data is available
	const hasAnyData = () => {
		return (
			signalData?.volatilitySpikes?.length > 0 ||
			signalData?.topGainers?.length > 0 ||
			signalData?.topLosers?.length > 0 ||
			signalData?.volumeSpikes?.length > 0 ||
			signalData?.priceChanges?.length > 0 ||
			signalData?.volatilityRanges?.length > 0 ||
			signalData?.triggerGainers1h?.length > 0 ||
			signalData?.triggerLosers1h?.length > 0 ||
			signalData?.triggerGainers4h?.length > 0 ||
			signalData?.triggerLosers4h?.length > 0 ||
			signalData?.triggerGainers24h?.length > 0 ||
			signalData?.triggerLosers24h?.length > 0 ||
			signalData?.topGainers1h?.length > 0 ||
			signalData?.topLosers1h?.length > 0 ||
			signalData?.topGainers4h?.length > 0 ||
			signalData?.topLosers4h?.length > 0 ||
			signalData?.topGainers24h?.length > 0 ||
			signalData?.topLosers24h?.length > 0
		)
	}

	return (
		<div className='p-4 w-full h-full overflow-y-auto max-h-screen'>
			<h2 className='text-xl font-bold mb-2 sticky top-0 bg-white dark:bg-gray-900 py-2 z-10'>
				üî• –°–∏–≥–Ω–∞–ª—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
			</h2>

			{status === 'connecting' && (
				<p className='text-yellow-500 mb-4 px-2 py-1 bg-yellow-50 dark:bg-yellow-900/20 rounded border border-yellow-200 dark:border-yellow-800'>
					<span className='inline-block w-2 h-2 mr-2 bg-yellow-500 rounded-full animate-pulse'></span>
					{message}
				</p>
			)}

			{status === 'reconnecting' && (
				<p className='text-blue-500 mb-4 px-2 py-1 bg-blue-50 dark:bg-blue-900/20 rounded border border-blue-200 dark:border-blue-800'>
					<span className='inline-block w-2 h-2 mr-2 bg-blue-500 rounded-full animate-pulse'></span>
					{message}
				</p>
			)}

			{status === 'error' && (
				<div className='mb-4'>
					<p className='text-red-500 px-2 py-1 bg-red-50 dark:bg-red-900/20 rounded border border-red-200 dark:border-red-800'>
						<span className='inline-block w-2 h-2 mr-2 bg-red-500 rounded-full'></span>
						{message}
						<button
							onClick={() => window.location.reload()}
							className='ml-2 px-2 py-0.5 text-xs bg-red-100 dark:bg-red-800 text-red-700 dark:text-red-200 rounded hover:bg-red-200 dark:hover:bg-red-700'
						>
							–û–±–Ω–æ–≤–∏—Ç—å
						</button>
					</p>

					{isPersistentError && (
						<div className='mt-2 p-3 bg-gray-50 dark:bg-gray-800 rounded border border-gray-200 dark:border-gray-700'>
							<h3 className='font-medium mb-1'>–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –æ—à–∏–±–∫–∏:</h3>
							<ul className='text-sm list-disc pl-5 space-y-1'>
								<li>–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –Ω–∞ –≤–∞—à–µ–π —Å–µ—Ç–∏</li>
								<li>–ü—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä –∏–ª–∏ –±—Ä–∞–Ω–¥–º–∞—É—ç—Ä –±–ª–æ–∫–∏—Ä—É–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ</li>
								<li>–í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–≤–µ—Ä–æ–º</li>
							</ul>
							<div className='mt-2'>
								<p className='text-sm mb-2'>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —Ä–µ—à–µ–Ω–∏—è:</p>
								<div className='flex flex-wrap gap-2'>
									<button
										onClick={() => {
											// Try connecting with HTTP polling only
											window.location.search = '?transport=polling'
											window.location.reload()
										}}
										className='px-3 py-1 text-xs bg-blue-100 dark:bg-blue-800 text-blue-700 dark:text-blue-200 rounded hover:bg-blue-200 dark:hover:bg-blue-700'
									>
										–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å HTTP-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
									</button>
									<button
										onClick={() => window.location.reload()}
										className='px-3 py-1 text-xs bg-green-100 dark:bg-green-800 text-green-700 dark:text-green-200 rounded hover:bg-green-200 dark:hover:bg-green-700'
									>
										–ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è
									</button>
								</div>
							</div>
						</div>
					)}
				</div>
			)}

			{!hasAnyData() && status !== 'error' && (
				<p className='text-gray-500 mb-4 px-2 py-1 bg-gray-50 dark:bg-gray-800/50 rounded border border-gray-200 dark:border-gray-700'>
					<span className='inline-block w-2 h-2 mr-2 bg-gray-400 rounded-full animate-pulse'></span>
					–û–∂–∏–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤...
				</p>
			)}
			<section>
				<h2 className='text-lg font-bold mt-8 mb-4'>
					–ú–æ–Ω–µ—Ç—ã —Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –ø–æ —Ñ—å—é—á–∞–º 24—á –∏–Ω—Ç–µ—Ä–≤–∞–ª 5–º
				</h2>

				<div className='grid grid-cols-1 md:grid-cols-2 gap-4'>
					<TimeframeCoinsTable
						coins={signalData?.topGainers5min || []}
						title='—Ä–∞—Å—Ç—É—â–∏—Ö –º–æ–Ω–µ—Ç (5–º–∏–Ω)'
						timeframe='5–º–∏–Ω'
						isGainer={true}
					/>

					<TimeframeCoinsTable
						coins={signalData?.topLosers5min || []}
						title='–ø–∞–¥–∞—é—â–∏—Ö –º–æ–Ω–µ—Ç (5–º–∏–Ω)'
						timeframe='5–º–∏–Ω'
						isGainer={false}
					/>
				</div>
				<div className='grid grid-cols-1 md:grid-cols-2 gap-4'>
					<TimeframeCoinsTable
						coins={signalData?.topVolume5min || []}
						title='–æ–±—ä–µ–º–Ω—ã—Ö –º–æ–Ω–µ—Ç (5–º–∏–Ω)'
						timeframe='5–º–∏–Ω'
						isGainer={true}
						isVolume={true}
					/>

					<TimeframeCoinsTable
						coins={signalData?.topFunding5min || []}
						title='—Ñ–∞–Ω–¥–∏–Ω–≥ (5–º–∏–Ω)'
						timeframe='5–º–∏–Ω'
						isGainer={true}
						isFunding={true}
					/>
				</div>
			</section>
			<section>
				<VolatilityTable
					signals={signalData?.volatilitySpikes || []}
					title='–í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å –ø–æ —Å–≤–µ—á–µ 1–º(—Ñ–∏–ª—å—Ç—Ä 0.8)'
				/>

				<VolatilityTable
					signals={signalData?.volatilityRanges || []}
					title='–í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 30–º–∏–Ω'
				/>
			</section>
			<div className='space-y-6 pb-8'>
				{/* <VolumeSpikeTable signals={signalData?.volumeSpikes || []} />

				<PriceChangeTable signals={signalData?.priceChanges || []} />

				<TopCoinsTable
					coins={signalData?.topGainers || []}
					title='—Ä–∞—Å—Ç—É—â–∏—Ö –º–æ–Ω–µ—Ç–∞—Ö'
					isGainer={true}
				/>

				<TopCoinsTable
					coins={signalData?.topLosers || []}
					title='–ø–∞–¥–∞—é—â–∏—Ö –º–æ–Ω–µ—Ç–∞—Ö'
					isGainer={false}
				/> */}

				{/* Timeframe-specific top coins with change values */}
				{/* <h2 className='text-lg font-bold mt-8 mb-4'>
					–ú–æ–Ω–µ—Ç—ã –ø–æ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞–º —Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –ø–æ —Å–ø–æ—Ç—É
				</h2>

				<div className='grid grid-cols-1 md:grid-cols-2 gap-4'>
					<TimeframeCoinsTable
						coins={signalData?.topGainers1h || []}
						title='—Ä–∞—Å—Ç—É—â–∏—Ö –º–æ–Ω–µ—Ç (1—á)'
						timeframe='1—á'
						isGainer={true}
					/>

					<TimeframeCoinsTable
						coins={signalData?.topLosers1h || []}
						title='–ø–∞–¥–∞—é—â–∏—Ö –º–æ–Ω–µ—Ç (1—á)'
						timeframe='1—á'
						isGainer={false}
					/>
				</div>

				<div className='grid grid-cols-1 md:grid-cols-2 gap-4'>
					<TimeframeCoinsTable
						coins={signalData?.topGainers4h || []}
						title='—Ä–∞—Å—Ç—É—â–∏—Ö –º–æ–Ω–µ—Ç (4—á)'
						timeframe='4—á'
						isGainer={true}
					/>

					<TimeframeCoinsTable
						coins={signalData?.topLosers4h || []}
						title='–ø–∞–¥–∞—é—â–∏—Ö –º–æ–Ω–µ—Ç (4—á)'
						timeframe='4—á'
						isGainer={false}
					/>
				</div>

				<div className='grid grid-cols-1 md:grid-cols-2 gap-4'>
					<TimeframeCoinsTable
						coins={signalData?.topGainers24h || []}
						title='—Ä–∞—Å—Ç—É—â–∏—Ö –º–æ–Ω–µ—Ç (24—á)'
						timeframe='24—á'
						isGainer={true}
					/>

					<TimeframeCoinsTable
						coins={signalData?.topLosers24h || []}
						title='–ø–∞–¥–∞—é—â–∏—Ö –º–æ–Ω–µ—Ç (24—á)'
						timeframe='24—á'
						isGainer={false}
					/>
				</div> */}

				{/* Trigger coins tables */}
				{/* <h2 className='text-lg font-bold mt-8 mb-4'>–¢—Ä–∏–≥–≥–µ—Ä—ã –ø–æ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞–º</h2>
				
				<div className='grid grid-cols-1 md:grid-cols-2 gap-4'>
					<TriggerCoinsTable
						coins={signalData?.triggerGainers1h || []}
						title='—Ç—Ä–∏–≥–≥–µ—Ä–∞ –¥–ª—è —Ä–∞—Å—Ç—É—â–∏—Ö –º–æ–Ω–µ—Ç (1—á)'
						timeframe='1—á'
						isGainer={true}
					/>
					
					<TriggerCoinsTable
						coins={signalData?.triggerLosers1h || []}
						title='—Ç—Ä–∏–≥–≥–µ—Ä–∞ –¥–ª—è –ø–∞–¥–∞—é—â–∏—Ö –º–æ–Ω–µ—Ç (1—á)'
						timeframe='1—á'
						isGainer={false}
					/>
				</div>
				
				<div className='grid grid-cols-1 md:grid-cols-2 gap-4'>
					<TriggerCoinsTable
						coins={signalData?.triggerGainers4h || []}
						title='—Ç—Ä–∏–≥–≥–µ—Ä–∞ –¥–ª—è —Ä–∞—Å—Ç—É—â–∏—Ö –º–æ–Ω–µ—Ç (4—á)'
						timeframe='4—á'
						isGainer={true}
					/>
					
					<TriggerCoinsTable
						coins={signalData?.triggerLosers4h || []}
						title='—Ç—Ä–∏–≥–≥–µ—Ä–∞ –¥–ª—è –ø–∞–¥–∞—é—â–∏—Ö –º–æ–Ω–µ—Ç (4—á)'
						timeframe='4—á'
						isGainer={false}
					/>
				</div>
				
				<div className='grid grid-cols-1 md:grid-cols-2 gap-4'>
					<TriggerCoinsTable
						coins={signalData?.triggerGainers24h || []}
						title='—Ç—Ä–∏–≥–≥–µ—Ä–∞ –¥–ª—è —Ä–∞—Å—Ç—É—â–∏—Ö –º–æ–Ω–µ—Ç (24—á)'
						timeframe='24—á'
						isGainer={true}
					/>
					
					<TriggerCoinsTable
						coins={signalData?.triggerLosers24h || []}
						title='—Ç—Ä–∏–≥–≥–µ—Ä–∞ –¥–ª—è –ø–∞–¥–∞—é—â–∏—Ö –º–æ–Ω–µ—Ç (24—á)'
						timeframe='24—á'
						isGainer={false}
					/>
				</div> */}
			</div>
		</div>
	)
}
