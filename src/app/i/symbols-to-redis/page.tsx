'use client'

import { useState } from 'react'
import { toast } from 'sonner'

import { SymbolList } from '@/components/symbol-to-redis/SymbolList'
import SymbolsExcelUploader from '@/components/symbol-to-redis/SymbolsExcelUploader'

import type {
	CreateSymbolToRedisDto,
	UpdateSymbolToRedisDto
} from '@/types/symbol-to-redis.types'

import styles from './page.module.scss'
import {
	useCreateSymbolMutation,
	useDeleteSymbolMutation,
	useGetSymbolsQuery,
	useUpdateSymbolMutation
} from '@/services/symbol-to-redis.api'

export default function SymbolsToRedisPage() {
	const [showExcelUploader, setShowExcelUploader] = useState(false)
	const [filters, setFilters] = useState({
		limit: 100,
		offset: 0,
		field: 'createdAt',
		direction: 'desc' as const
	})

	const {
		data: symbolsResponse,
		isLoading,
		error,
		refetch
	} = useGetSymbolsQuery(filters)
	const [createSymbol, { isLoading: isCreating }] = useCreateSymbolMutation()
	const [updateSymbol, { isLoading: isUpdating }] = useUpdateSymbolMutation()
	const [deleteSymbol, { isLoading: isDeleting }] = useDeleteSymbolMutation()

	const symbols = symbolsResponse?.data || []
	const isLoadingAny = isLoading || isCreating || isUpdating || isDeleting

	const handleCreate = async (data: CreateSymbolToRedisDto) => {
		try {
			await createSymbol(data).unwrap()
			refetch()
			toast.success('–°–∏–º–≤–æ–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω')
		} catch (error) {
			console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∏–º–≤–æ–ª–∞:', error)
			toast.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∏–º–≤–æ–ª–∞')
		}
	}

	const handleUpdate = async (id: string, data: UpdateSymbolToRedisDto) => {
		try {
			await updateSymbol({ id, data }).unwrap()
			refetch()
			toast.success('–°–∏–º–≤–æ–ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω')
		} catch (error) {
			console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–∏–º–≤–æ–ª–∞:', error)
			toast.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–∏–º–≤–æ–ª–∞')
		}
	}

	const handleDelete = async (id: string) => {
		try {
			await deleteSymbol(id).unwrap()
			refetch()
			toast.success('–°–∏–º–≤–æ–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω')
		} catch (error) {
			console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–∏–º–≤–æ–ª–∞:', error)
			toast.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–∏–º–≤–æ–ª–∞')
		}
	}

	if (showExcelUploader) {
		return (
			<div className={styles.container}>
				<div className={styles.headerRow}>
					<h1 className={styles.pageTitle}>–ó–∞–≥—Ä—É–∑–∫–∞ —Å–∏–º–≤–æ–ª–æ–≤ –∏–∑ Excel</h1>
					<button
						onClick={() => setShowExcelUploader(false)}
						className={styles.buttonSecondary}
					>
						‚Üê –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É
					</button>
				</div>
				<SymbolsExcelUploader />
			</div>
		)
	}

	if (error) {
		return (
			<div className={styles.errorContainer}>
				<h1 className={styles.errorTitle}>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h1>
				<p className={styles.errorMessage}>
					–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ—Ä–≥–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.
				</p>
				<button
					onClick={() => refetch()}
					className={styles.retryButton}
				>
					–ü–æ–≤—Ç–æ—Ä–∏—Ç—å
				</button>
			</div>
		)
	}

	return (
		<div className={styles.container}>
			<div className={styles.headerRow}>
				<div>
					<h1 className={styles.pageTitle}>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏</h1>
					<p className={styles.pageDescription}>
						–°–æ–∑–¥–∞–≤–∞–π—Ç–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –∏ —É–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ç–æ—Ä–≥–æ–≤—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏ —Å
						–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π –≤ Redis
					</p>
				</div>
				<button
					onClick={() => setShowExcelUploader(true)}
					className={styles.buttonSecondary}
				>
					üìä –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ Excel
				</button>
			</div>

			<SymbolList
				symbols={symbols}
				onCreate={handleCreate}
				onUpdate={handleUpdate}
				onDelete={handleDelete}
				isLoading={isLoadingAny}
			/>

			{/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
			{symbolsResponse && (
				<div className={styles.stats}>
					<div className={styles.statItem}>
						<span className={styles.statLabel}>–í—Å–µ–≥–æ —Å–∏–º–≤–æ–ª–æ–≤:</span>
						<span className={styles.statValue}>{symbolsResponse.total}</span>
					</div>
					<div className={styles.statItem}>
						<span className={styles.statLabel}>–ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:</span>
						<span className={styles.statValue}>{symbols.length}</span>
					</div>
					<div className={styles.statItem}>
						<span className={styles.statLabel}>–°—Ç—Ä–∞–Ω–∏—Ü–∞:</span>
						<span className={styles.statValue}>
							{symbolsResponse.currentPage}
						</span>
					</div>
				</div>
			)}
		</div>
	)
}
